/*
 * This file is generated by jOOQ.
 */
package com.example.dao.tables.records;


import com.example.dao.tables.Student;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentRecord extends UpdatableRecordImpl<StudentRecord> implements Record5<Integer, String, Long, String, Integer> {

    private static final long serialVersionUID = 468255777;

    /**
     * Setter for <code>test.student.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>test.student.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test.student.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>test.student.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>test.student.score</code>.
     */
    public void setScore(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>test.student.score</code>.
     */
    public Long getScore() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>test.student.class</code>.
     */
    public void setClass_(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>test.student.class</code>.
     */
    public String getClass_() {
        return (String) get(3);
    }

    /**
     * Setter for <code>test.student.age</code>.
     */
    public void setAge(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>test.student.age</code>.
     */
    public Integer getAge() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, Long, String, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, Long, String, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Student.STUDENT.ID;
    }

    @Override
    public Field<String> field2() {
        return Student.STUDENT.NAME;
    }

    @Override
    public Field<Long> field3() {
        return Student.STUDENT.SCORE;
    }

    @Override
    public Field<String> field4() {
        return Student.STUDENT.CLASS;
    }

    @Override
    public Field<Integer> field5() {
        return Student.STUDENT.AGE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Long component3() {
        return getScore();
    }

    @Override
    public String component4() {
        return getClass_();
    }

    @Override
    public Integer component5() {
        return getAge();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Long value3() {
        return getScore();
    }

    @Override
    public String value4() {
        return getClass_();
    }

    @Override
    public Integer value5() {
        return getAge();
    }

    @Override
    public StudentRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public StudentRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public StudentRecord value3(Long value) {
        setScore(value);
        return this;
    }

    @Override
    public StudentRecord value4(String value) {
        setClass_(value);
        return this;
    }

    @Override
    public StudentRecord value5(Integer value) {
        setAge(value);
        return this;
    }

    @Override
    public StudentRecord values(Integer value1, String value2, Long value3, String value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentRecord
     */
    public StudentRecord() {
        super(Student.STUDENT);
    }

    /**
     * Create a detached, initialised StudentRecord
     */
    public StudentRecord(Integer id, String name, Long score, String class_, Integer age) {
        super(Student.STUDENT);

        set(0, id);
        set(1, name);
        set(2, score);
        set(3, class_);
        set(4, age);
    }
}
